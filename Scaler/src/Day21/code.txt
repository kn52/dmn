Q1. Set Bit
class Solution {
    public int solve(int A, int B) {
        return 1<<B|1<<A;
    }
}

Q2. Unset i-th bit
class Solution {
    public int solve(int A, int B) {
        return A & ~(1 << B);
    }
}
 
 
Q3. Check bit
 class Solution {
    public int solve(int A, int B) {
        if ((A & (1 << B)) != 0) {
            return 1;
        }
        return 0;
    }
}
 
Q4. Number of 1 Bits
class Solution {
    public int numSetBits(int A) {
        var number = Convert.ToString(A, 2);
        var ans = number.Replace("0", "");
        return ans.Length;
    }
}


Q5. Help From Sam
class Solution {
    public int solve(int A) {
        int N = A;
        int count = 0;
        while (N > 0) {
            if ((N & 1) == 1) {
                count++;
            }
            N = N>>1;
        }
        return count;
    }
}
