Q1. Elements Removal
class Solution {
    public int solve(List<int> A) {
        A.Sort();
        A.Reverse();
        int mincost = 0;
        for (int i = 0; i < A.Count; i++) {
            mincost += A[i] * (i + 1);
        }
        return mincost;
    }
}

Q2. Noble Integer
class Solution {
    public int solve(List<int> A) {
        A.Sort();
        int N = A.Count;
        int exist = -1;
        for (int i = 0; i < N - 1; i++)
        {
            if (A[i] == N - i - 1 && A[i] != A[i + 1])
            {
                exist = 1;
            }
        }

        if (A[N - 1] == 0)
        {
            exist = 1;
        }
        return exist;
    }
}


Q4. Kth Smallest Element
class Solution {
    public int kthsmallest(List<int> A, int B) {
        A.Sort();
        return A[B - 1];
    }
}



Q1. Arithmetic Progression?
class Solution {
    public int solve(List<int> A) {
        A.Sort();
        if (A.Count > 1) {
            int diff = A[1] - A[0];
            for (int i = 2; i < A.Count; i++) {
                if (A[i] - A[i - 1] != diff) {
                    return 0;
                }    
            }
        } else {
            return 0;
        }
        return 1;
    }
}
